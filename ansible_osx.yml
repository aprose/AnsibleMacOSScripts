---
- hosts: localhost
  tasks:
    - name: Install homebrew
      include_role:
        name: geerlingguy.mac.homebrew

    - name: Make sure homebrew bin is in path
      ansible.builtin.lineinfile:
        path: /etc/paths
        state: present
        line: '/opt/homebrew/bin'
      become: true
      become_user: root

    - name: 'add custom homebrew repos'
      community.general.homebrew_tap:
        name: [
          adoptopenjdk/openjdk,
          fishtown-analytics/dbt,
          heroku/brew,
          homebrew/cask-versions,
          thoughtbot/formulae,
          weaveworks/tap,
        ]

    - name: Install core packages via brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: yes
      with_items:
        - docker
        - kindle
        - visual-studio-code

    - name: "Install homebrew packages"
      community.general.homebrew:
        name: [
          'aws-iam-authenticator',
          'awscli',
          'coreutils',
          'curl',
          'libtool',
          'libxslt',
          'libyaml',
          'mas',
          'openssl' ,
          'pkg-config',
          'zlib',
          'zsh',
        ]
        state: present
        update_homebrew: yes

    - name: "Install from Mac app store"
      shell: mas install {{ item }}
      with_items:
        - 497799835 # xcode

    - name: Get the path to ZSH
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true


    - name: Set ZSH as the default shell
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true


    - name: Create a default VSCode configuration
      template:
        src: templates/vscode-settings.json.j2
        dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/settings.json
        owner: "{{ lookup('env', 'USER') }}"
        force: yes


    # Add something which ensures path is set here
    - name: Install VSCode extensions
      shell: code --install-extension {{ item }}
      with_items:
        - apollographql.vscode-apollo
        - eamodio.gitlens
        - redhat.ansible
        - ms-vscode-remote.vscode-remote-extensionpack
        - ms-vscode-remote.remote-containers
        - ms-azuretools.vscode-docker
        - ms-python.isort
        - ms-toolsai.jupyter
        - ms-toolsai.vscode-jupyter-cell-tags
        - ms-toolsai.jupyter-keymap
        - ms-toolsai.jupyter-renderers
        - ms-toolsai.vscode-jupyter-slideshow
        - ms-kubernetes-tools.vscode-kubernetes-tools
        - ms-python.vscode-pylance
        - ms-python.python
        - ms-vscode-remote.remote-ssh
        - ms-vscode-remote.remote-ssh-edit
        - ms-vscode.remote-explorer
        - redhat.vscode-yaml
        

    - git:
        repo: https://github.com/asdf-vm/asdf.git
        dest: "/Users/{{ lookup('env', 'USER') }}/.asdf"
        version: v0.8.1

    - name: "Create a default asdf configuration"
      template:
        src: templates/.asdfrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.asdfrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - name: "Install asdf plugins"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf plugin-add {{ item }} || exit 0
      with_items:
        - python

    - name: "Install Default Python"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install python 3.10.0
        asdf global python 3.10.0
        pip3 install ansible
        asdf reshim python



        

